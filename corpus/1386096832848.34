Dave Winer has been thinking about, and recently writing about, a new idea: Reading Lists. OPML is a really useful file structure that just about everyone who uses a feed aggregator, like bloglines, is already using without necessarily knowing it. Most readers keep subscribed feeds for a user in OPML format, for easy importing and exporting. If you export your OPML feed you get a XML file of your feeds, which other feed readers understand. The problem with opml files from readers is that they are static, meaning I can give you my OPML file but you will never know if I add or delete feeds unless I tell you and give you the new file. All you get is a snapshot of my feeds from the moment that I share my file with you. Dave thinks these files should be dynamic, which means that I can share my opml file, or as he calls it my reading list, and anyone who subscribes to it will always have the current version, no matter how often I amend that list. There is very little technology needed to allow this to happen – the various feed readers simply need to agree to support dynamic lists and allow people to share them permanently. Dave’s trying to make this happen. If he succeeds, we’ll all be able to subscribe to reading lists from people we trust on a given subject, and good feeds will be that much easier to find. Fred Oliveira wrote about this recently as well. In a comment, Eric Lin writes: i could easily see this not only as a way to share my reading list with others i know, but also to be matched with others i donâ€™t know with common interests. what if the system could match me with other people who have similar tech, music or lifestyle feeds as i do. it would be a fantastic way to make new connections as well as strengthen existing ones, and i could see communities forming around overlapping feeds. these communities might be stronger than those that form around a single website because theyâ€™d have more in common. Yeah, exactly. As soon as people start to think about this idea, a lot of other interesting ideas start to spring up. A real world example of where we need this is our Web2.0WorkGroup. Feeds for each blog are linked, and we have a static OPML file that we are updating as new feeds join. However, because the file is static, anyone who downloads the file has to check back frequently as new feeds are added. Let’s automate this process.